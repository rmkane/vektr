import { fromObjectPolar as fromPolar, toObjectPolar as toPolar } from './conversion/index'
import {
  absObject as abs,
  absObjectX as absX,
  absObjectY as absY,
  addObject as add,
  addObjectScalar as addScalar,
  addObjectScalarX as addScalarX,
  addObjectScalarY as addScalarY,
  addObjectX as addX,
  addObjectY as addY,
  ceilObject as ceil,
  ceilObjectX as ceilX,
  ceilObjectY as ceilY,
  clampObject as clamp,
  clampObjectX as clampX,
  clampObjectY as clampY,
  divideObject as divide,
  divideObjectScalar as divideScalar,
  divideObjectScalarX as divideScalarX,
  divideObjectScalarY as divideScalarY,
  divideObjectX as divideX,
  divideObjectY as divideY,
  floorObject as floor,
  floorObjectX as floorX,
  floorObjectY as floorY,
  fractObject as fract,
  fractObjectX as fractX,
  fractObjectY as fractY,
  invertObject as invert,
  invertObjectX as invertX,
  invertObjectY as invertY,
  lerpObject as lerp,
  lerpObjectX as lerpX,
  lerpObjectY as lerpY,
  maxObject as max,
  maxObjectX as maxX,
  maxObjectY as maxY,
  minObject as min,
  minObjectX as minX,
  minObjectY as minY,
  moduloObject as modulo,
  moduloObjectScalar as moduloScalar,
  moduloObjectScalarX as moduloScalarX,
  moduloObjectScalarY as moduloScalarY,
  moduloObjectX as moduloX,
  moduloObjectY as moduloY,
  multiplyObject as multiply,
  multiplyObjectScalar as multiplyScalar,
  multiplyObjectScalarX as multiplyScalarX,
  multiplyObjectScalarY as multiplyScalarY,
  multiplyObjectX as multiplyX,
  multiplyObjectY as multiplyY,
  negateObject as negate,
  negateObjectX as negateX,
  negateObjectY as negateY,
  normizeObject as normize,
  roundObject as round,
  roundObjectX as roundX,
  roundObjectY as roundY,
  scaleObject as scale,
  scaleObjectX as scaleX,
  scaleObjectY as scaleY,
  subtractObject as subtract,
  subtractObjectScalar as subtractScalar,
  subtractObjectScalarX as subtractScalarX,
  subtractObjectScalarY as subtractScalarY,
  subtractObjectX as subtractX,
  subtractObjectY as subtractY,
  unitObject as unit,
  wrapObject as wrap,
  wrapObjectX as wrapX,
  wrapObjectY as wrapY,
} from './operation/index'
import {
  angleObject as angle,
  angleObjectDegrees as angleDegrees,
  crossObject as cross,
  directionObject as direction,
  distanceObject as distance,
  distanceObjectX as distanceX,
  distanceObjectY as distanceY,
  dotObject as dot,
  horizontalAngleDegreesObject as horizontalAngleDegrees,
  horizontalAngleObject as horizontalAngle,
  lengthObject as length,
  magnitudeObject as magnitude,
  normObject as norm,
  verticalAngleDegreesObject as verticalAngleDegrees,
  verticalAngleObject as verticalAngle,
} from './product/index'

// eslint-disable-next-line @typescript-eslint/no-namespace
export {
  abs,
  absX,
  absY,
  add,
  addScalar,
  addScalarX,
  addScalarY,
  addX,
  addY,
  angle,
  angleDegrees,
  ceil,
  ceilX,
  ceilY,
  clamp,
  clampX,
  clampY,
  cross,
  direction,
  distance,
  distanceX,
  distanceY,
  divide,
  divideScalar,
  divideScalarX,
  divideScalarY,
  divideX,
  divideY,
  dot,
  floor,
  floorX,
  floorY,
  fract,
  fractX,
  fractY,
  fromPolar,
  horizontalAngle,
  horizontalAngleDegrees,
  invert,
  invertX,
  invertY,
  length,
  lerp,
  lerpX,
  lerpY,
  magnitude,
  max,
  maxX,
  maxY,
  min,
  minX,
  minY,
  modulo,
  moduloScalar,
  moduloScalarX,
  moduloScalarY,
  moduloX,
  moduloY,
  multiply,
  multiplyScalar,
  multiplyScalarX,
  multiplyScalarY,
  multiplyX,
  multiplyY,
  negate,
  negateX,
  negateY,
  norm,
  normize,
  round,
  roundX,
  roundY,
  scale,
  scaleX,
  scaleY,
  subtract,
  subtractScalar,
  subtractScalarX,
  subtractScalarY,
  subtractX,
  subtractY,
  toPolar,
  unit,
  verticalAngle,
  verticalAngleDegrees,
  wrap,
  wrapX,
  wrapY,
}

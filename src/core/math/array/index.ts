import { fromArrayPolar as fromPolar, toArrayPolar as toPolar } from './conversion/index'
import {
  absArray as abs,
  absArrayX as absX,
  absArrayY as absY,
  addArray as add,
  addArrayScalar as addScalar,
  addArrayScalarX as addScalarX,
  addArrayScalarY as addScalarY,
  addArrayX as addX,
  addArrayY as addY,
  ceilArray as ceil,
  ceilArrayX as ceilX,
  ceilArrayY as ceilY,
  clampArray as clamp,
  clampArrayX as clampX,
  clampArrayY as clampY,
  divideArray as divide,
  divideArrayScalar as divideScalar,
  divideArrayScalarX as divideScalarX,
  divideArrayScalarY as divideScalarY,
  divideArrayX as divideX,
  divideArrayY as divideY,
  floorArray as floor,
  floorArrayX as floorX,
  floorArrayY as floorY,
  fractArray as fract,
  fractArrayX as fractX,
  fractArrayY as fractY,
  invertArray as invert,
  invertArrayX as invertX,
  invertArrayY as invertY,
  lerpArray as lerp,
  lerpArrayX as lerpX,
  lerpArrayY as lerpY,
  maxArray as max,
  maxArrayX as maxX,
  maxArrayY as maxY,
  minArray as min,
  minArrayX as minX,
  minArrayY as minY,
  moduloArray as modulo,
  moduloArrayScalar as moduloScalar,
  moduloArrayScalarX as moduloScalarX,
  moduloArrayScalarY as moduloScalarY,
  moduloArrayX as moduloX,
  moduloArrayY as moduloY,
  multiplyArray as multiply,
  multiplyArrayScalar as multiplyScalar,
  multiplyArrayScalarX as multiplyScalarX,
  multiplyArrayScalarY as multiplyScalarY,
  multiplyArrayX as multiplyX,
  multiplyArrayY as multiplyY,
  negateArray as negate,
  negateArrayX as negateX,
  negateArrayY as negateY,
  normizeArray as normize,
  roundArray as round,
  roundArrayX as roundX,
  roundArrayY as roundY,
  scaleArray as scale,
  scaleArrayX as scaleX,
  scaleArrayY as scaleY,
  subtractArray as subtract,
  subtractArrayScalar as subtractScalar,
  subtractArrayScalarX as subtractScalarX,
  subtractArrayScalarY as subtractScalarY,
  subtractArrayX as subtractX,
  subtractArrayY as subtractY,
  unitArray as unit,
  wrapArray as wrap,
  wrapArrayX as wrapX,
  wrapArrayY as wrapY,
} from './operation/index'
import {
  angleArray as angle,
  angleArrayDegrees as angleDegrees,
  crossArray as cross,
  directionArray as direction,
  distanceArray as distance,
  distanceArrayX as distanceX,
  distanceArrayY as distanceY,
  dotArray as dot,
  horizontalAngleDegreesArray as horizontalAngleDegrees,
  horizontalAngleArray as horizontalAngle,
  lengthArray as length,
  magnitudeArray as magnitude,
  normArray as norm,
  verticalAngleDegreesArray as verticalAngleDegrees,
  verticalAngleArray as verticalAngle,
} from './product/index'

// eslint-disable-next-line @typescript-eslint/no-namespace
export {
  abs,
  absX,
  absY,
  add,
  addScalar,
  addScalarX,
  addScalarY,
  addX,
  addY,
  angle,
  angleDegrees,
  ceil,
  ceilX,
  ceilY,
  clamp,
  clampX,
  clampY,
  cross,
  direction,
  distance,
  distanceX,
  distanceY,
  divide,
  divideScalar,
  divideScalarX,
  divideScalarY,
  divideX,
  divideY,
  dot,
  floor,
  floorX,
  floorY,
  fract,
  fractX,
  fractY,
  fromPolar,
  horizontalAngle,
  horizontalAngleDegrees,
  invert,
  invertX,
  invertY,
  length,
  lerp,
  lerpX,
  lerpY,
  magnitude,
  max,
  maxX,
  maxY,
  min,
  minX,
  minY,
  modulo,
  moduloScalar,
  moduloScalarX,
  moduloScalarY,
  moduloX,
  moduloY,
  multiply,
  multiplyScalar,
  multiplyScalarX,
  multiplyScalarY,
  multiplyX,
  multiplyY,
  negate,
  negateX,
  negateY,
  norm,
  normize,
  round,
  roundX,
  roundY,
  scale,
  scaleX,
  scaleY,
  subtract,
  subtractScalar,
  subtractScalarX,
  subtractScalarY,
  subtractX,
  subtractY,
  toPolar,
  unit,
  verticalAngle,
  verticalAngleDegrees,
  wrap,
  wrapX,
  wrapY,
}
